version: 2.1

orbs:
  windows: circleci/windows@2.3.0

jobs:
  build:
    executor: windows/default
    steps:
      - checkout
      - run:
          name: Checkout sources
          command: |
            git submodule sync
            git submodule update --init
            cd svg-native-viewer
            git submodule sync
            git submodule update --init
            cd third_party

      - run:
          name: Retrieve precompiled Skia m70
          command: |
            $absCurDir = (Get-Item -Path ".\").FullName
            $url1 = "https://home.hiroshima-u.ac.jp/mpsuzuki/7z/x64/7za.exe"
            $save1 = (Join-Path $absCurDir "7za.exe")
            (New-Object System.Net.WebClient).DownloadFile($url1, $save1)
            $url2 = "https://github.com/mpsuzuki/skia-binaries/releases/download/m70-win64-20191128/skia-m70-clang-on-win64_20191128-2210.tar.xz"
            $save2 = (Join-Path $absCurDir "skia-m70-clang-on-win64_20191128-2210.tar.xz")
            (New-Object System.Net.WebClient).DownloadFile($url2, $save2)
            .\7za.exe x skia-m70-clang-on-win64_20191128-2210.tar.xz
            rm skia-m70-clang-on-win64_20191128-2210.tar.xz
            .\7za.exe x skia-m70-clang-on-win64_20191128-2210.tar
            rm skia-m70-clang-on-win64_20191128-2210.tar
            mv skia-m70-clang-on-win64 svg-native-viewer\third_party\skia
      - run:
          name: Installing CMake
          command: |
            $global:ProgressPreference = 'SilentlyContinue'
            $cmakeVersion = "3.16.2"
            $url = "https://github.com/Kitware/CMake/releases/download/v" + $cmakeVersion + "/cmake-" + $cmakeVersion + "-win64-x64.zip"
            $outputDir = (Get-Item -Path ".\").FullName
            $outputZip = $outputDir + "\cmake.zip"
            (New-Object System.Net.WebClient).DownloadFile($url, $outputZip)
            Expand-Archive -LiteralPath $outputZip -DestinationPath $outputDir -Force
      - run:
          name: Installing Boost
          command: |
            $global:ProgressPreference = 'SilentlyContinue'
            $url = "https://dl.bintray.com/boostorg/release/1.72.0/source/boost_1_72_0.zip"
            $outputDir = (Get-Item -Path ".\").FullName
            $outputZip = $outputDir + "\boost_1_72_0.zip"
            (New-Object System.Net.WebClient).DownloadFile($url, $outputZip)
            Expand-Archive -LiteralPath $outputZip -DestinationPath $outputDir -Force
      - run:
          name: Creating Build Files - Shared Lib
          command: |
            $boostDir = (Get-Item -Path ".\").FullName + "\boost_1_72_0\"
            $env:BOOST_INCLUDEDIR = $boostDir
            $env:BOOST_ROOT = $boostDir + "boost"
            $cmakeVersion = "3.16.2"
            $env:Path += ";" + (Get-Item -Path ".\").FullName + "\cmake-" + $cmakeVersion + "-win64-x64\bin"
            cd .\svg-native-viewer\svgnative
            cmake -Bbuild/win-shared . -G "Visual Studio 16 2019" -DGDIPLUS=ON -DSKIA=ON -DSHARED=ON
      - run:
          name: Creating Binary Files - Shared Lib
          command: |
            $boostDir = (Get-Item -Path ".\").FullName + "\boost_1_72_0\"
            $env:BOOST_INCLUDEDIR = $boostDir
            $env:BOOST_ROOT = $boostDir + "boost"
            $cmakeVersion = "3.16.2"
            $env:Path += ";" + (Get-Item -Path ".\").FullName + "\cmake-" + $cmakeVersion + "-win64-x64\bin"
            cd .\svg-native-viewer\svgnative
            cmake --build build/win-shared
#
#  build_linux:
#    docker:
#      - image: ubuntu:bionic
#    steps:
#      - run:
#          name: Installing sudo
#          command: |
#            apt-get update
#            apt-get install -y sudo
#            rm -rf /var/lib/apt/lists/*
#
#      - run:
#          name: Installing Build System
#          command: |
#            apt-get update
#            apt-get install -y git build-essential libboost-system-dev cmake python2.7
#            apt-get install -y curl cpio
#            apt-get install -y libcairo2-dev
#            apt-get install -y libjpeg-turbo8-dev libjpeg8-dev libwebp-dev libglvnd-dev
#
#      - checkout
#      - run:
#          name: Setup 3rd Party Modules
#          command: |
#            git submodule sync
#            git submodule update --init
#            cd svg-native-viewer
#            git submodule sync
#            git submodule update --init
#            cd third_party
#            curl https://home.hiroshima-u.ac.jp/mpsuzuki/skia-m70_ubuntu1804_20190517.cpio.xz | xz -cd | cpio -vidum
#
#      - run:
#          name: Creating Build Files
#          command: |
#            cd svg-native-viewer/svgnative
#            cmake -Bbuild/linux -H. -DSTYLE=ON -DSKIA=ON -DCAIRO=ON
#
#      - run:
#          name: Creating Binary Files
#          command: |
#            cd svg-native-viewer/svgnative
#            make -C build/linux
#
#      - run:
#          name: Run tests
#          command: |
#            cd svg-native-viewer/svgnative
#            /usr/bin/python2.7 script/runTest.py --test=test
#
